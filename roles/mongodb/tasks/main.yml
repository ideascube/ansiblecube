---
- name: Check for existing installation
  file: path=/opt/mongo state=directory mode=0755
  register: mongodb

- name: download mongo package
  get_url: url={{filer_bsf}}/mongo.zip dest=/home/mongo.zip
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Copy and unzip mongodb armhf version archive
  unarchive: src=/home/mongo.zip dest=/opt/ copy=no
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Create a mongod symlink in PATH
  file: src=/opt/mongo/bin/mongod dest=/usr/bin/mongod state=link
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Install mongodb from repository
  apt: name=mongodb state=latest
  when: ansible_architecture == 'x86_64' and mongodb.changed

- name: Add mongodb user
  user: name=mongodb group=nogroup shell=/etc/false createhome=no
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Create log directory
  file: path=/var/log/mongodb/ state=directory mode=0755 owner=mongodb group=nogroup
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Create data directory
  file: path=/media/hdd/mongodb state=directory mode=0755 owner=mongodb group=nogroup
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Copy mongodb repair script
  copy: src=mongo_repair.sh dest=/opt/mongo/mongo_repair.sh mode=755
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Setup startup file
  copy: src=mongodb.service dest=/etc/systemd/system/mongodb.service owner=root group=root
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Create a mongodb service override unit directory
  file: path=dest=/etc/systemd/system/mongodb.service.d state=directory owner=root group=root
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Drop in a unit file so uwsgi starts after mongodb
  copy: src=before-uwsgi.conf dest=/etc/systemd/system/mongodb.service.d/before-uwsgi.conf owner=root group=root
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- name: Enable service mongodb
  service: name=mongodb enabled=yes
  when: ansible_architecture == 'armhf' or ansible_architecture == 'armv7l' and mongodb.changed

- tasks:
  include: ../../../post_tasks.yml task=mongodb version=1
  when: mongodb.changed
