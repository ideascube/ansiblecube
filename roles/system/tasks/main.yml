---
- include_vars: group_vars/{{ ansible_architecture }}.yml
  tags: ['master', 'custom','rename','update']

- name: Remove udev rules for wifi 
  file: path=/etc/udev/rules.d/70-persistent-net.rules state=absent
  tags: ['custom','rename']

## Maybe this could be pushed during preseed
- name: Make sure central_server pubkey is in known_hosts
  copy: src=ssh_known_hosts dest=/etc/ssh/ssh_known_hosts
          owner=root group=root mode=0644
  tags: ['custom','update','rename']

- name: Drop a complete source.list
  copy: src=source.list dest=/etc/apt/sources.list
  when: ansible_lsb.id == "Debian"
  tags: ['master','update']

- name: Update APT cache, not more than once every 8 hours
  apt: 
    update_cache: yes 
    cache_valid_time: 28800
  tags: ['master','custom','update']

- name: Fix broken package
  shell: dpkg --configure -a
  tags: ['master','custom','update']

- name: Remove unwanted packages before upgrading
  apt: name={{ item }} state=absent purge=yes
  with_items:
   - apache2
   - apache2-mpm-worker
   - apache2-utils
   - apache2.2-bin
   - apache2.2-common
   - btrfs-tools
   - figlet
   - toilet
   - bluez
   - fping
   - stress
   - iperf
   - lirc
   - apt-listchanges
   - clipit
   - sslh
  tags: ['master','update']

- name: Install all required package
  apt: name={{ item }} state=latest
  with_items:
   - python-pip
   - python-dev
   - python-setuptools
   - python-virtualenv
   - virtualenv
   - git
   - sudo
   - lsb-release
   - vim
   - locate
   - git
   - unzip
   - bash-completion
   - aptitude
   - fake-hwclock
   - hdparm
   - ncurses-term
   - libffi-dev
   - libssl-dev
   - tree
   - screen
   - iftop
   - tmux
   - mtr-tiny
   - libwww-perl
   - httpie
   - lshw
   - hwinfo
   - sqlite3
   - elinks
   - mosh
   - curl
   - apt-transport-https
   - iotop
   - htop
   - anacron
  tags: ['master','custom','update']

- name: Install avahi packages
  apt: name={{ item }} state=latest
  with_items:
   - avahi-daemon
   - libnss-mdns
   - avahi-utils
  tags: ['custom','update']

- name: Upgrade pip to the latest version
  pip: name=pip version=9.0.1
  tags: ['master', 'custom','update']

- name: Check for Ralink Wireless Network Adapter
  shell: lsusb | grep -F "Ralink Technology" ; echo
  register: lsusb_ralink
  tags: ['master', 'custom']

- include: ralink.yml
  when: lsusb_ralink.stdout != "" and (ansible_architecture == 'x86_64' or ansible_architecture == 'i386')
  tags: ['master', 'custom']

- name: Check for Realtek Wireless Network Adapter
  shell: lspci | grep -F "Realtek Semiconductor" ; echo
  register: lspci_realtek
  tags: ['master', 'update']

- include: realtek.yml
  when: lspci_realtek.stdout != "" and (ansible_architecture == 'x86_64' or ansible_architecture == 'i386')

- name: Test if a fex file exist (old olimex lime2 image)
  stat: path=/boot/bin/lime2.bin
  register: fex_file
  tags: ['custom','update']

- name: Test if a DTB Lime2 file exist (new olimex lime2 image)
  stat: path=/boot/dtb/sun7i-a20-olinuxino-lime2.dtb
  register: dtb_file
  tags: ['custom','update']

- name: Ensure the HDD mountpoint exists
  file: path=/media/hdd state=directory mode=0755
  when: ext_hdd
  tags: ['custom','update']

- name: Mount /dev/sda1
  mount: name=/media/hdd/ src=/dev/sda1 fstype=ext4 state=mounted opts=noatime,nofail
  when: ext_hdd
  tags:
    - custom

- include: lime2.yml
  when: (fex_file.stat.exists is defined and fex_file.stat.exists 
    or dtb_file.stat.exists is defined and dtb_file.stat.exists)

- name: List services to restart (1/2)
  shell: checkrestart | grep ^service | awk '{print $2}'
  register: services
  changed_when: False
  tags:
    - master

- name: Allow unauthenticated packages
  lineinfile: dest=/etc/apt/apt.conf.d/9999IDEASCUBEISABADBADBOY line='APT::Get::AllowUnauthenticated "true";' create=yes
  tags: ['master', 'custom']

- name: Upgrade packages
  apt: upgrade=safe
  tags: ['master', 'custom']

- name: Remove the unauthenticated hack
  file: path=/etc/apt/apt.conf.d/9999IDEASCUBEISABADBADBOY state=absent
  tags: ['master', 'custom']

- name: Drop hosts file on device
  template: src=hosts.j2 dest=/etc/hosts
  tags: ['custom','update','rename']
  
- name: Drop dhclient.conf file on device
  template: src=dhclient.conf.j2 dest=/etc/dhcp/dhclient.conf
  tags: ['master','custom','update','rename']
  
- name: Add domain name entry in /etc/hosts if a cache machine is around
  command: /etc/NetworkManager/dispatcher.d/02koombook-doctor eth0 up
  when: cache_machine.state|default(omit) == "present"
  tags: ['update','idc_import','package_management','kalite_import' ]

- name: Create an ideascube user on the system
  user: name={{ username }}
        shell=/bin/bash
        groups="sudo,www-data,adm,staff"
        home="/home/{{ username }}"
        generate_ssh_key=yes
        ssh_key_bits=2048
        ssh_key_file=.ssh/id_rsa
        password={{ password }}
        update_password={{Â managed_by_bsf|bool | ternary('always', 'on_create') }}
  tags: ['master', 'update']

- name: Set up authorized_keys for the ideascube user
  authorized_key: user={{username}} key="{{ item }}"
  with_file:
    - florian.pub
    - tom.pub
    - steven.pub
  when: managed_by_bsf|bool
  tags: ['master', 'update']

- name: Set up authorized_keys for root user
  authorized_key: user=root key="{{ item }}"
  with_file:
    - florian.pub
    - tom.pub
    - steven.pub
  when: managed_by_bsf|bool
  tags: ['master', 'update']

- name: Add locales
  locale_gen: name="{{ item }}" state=present
  with_items:
  - fr_FR.UTF-8
  - en_US.UTF-8
  tags: ['master', 'update']

- name: Copy a blank rc.local
  copy: src=rc.local dest=/etc/rc.local owner=root group=root mode=0644 backup=yes
  tags:
    - master

- name: Copy .bashrc for root
  copy: src=bashrc dest=/root/.bashrc owner=root
  tags:
    - master

- name: Copy the global vimrc file
  copy: src=vimrc.local dest=/etc/vim/vimrc.local owner=root mode=0644
  tags:
    - master

- name: Copy .bashrc for new username
  copy: src=bashrc dest=/home/{{ username }}/.bashrc owner={{ username }}
  tags:
    - master

- name: Copy visudo file for ideascube user
  template: src=visudo.j2 dest=/etc/sudoers.d/shutdown
    owner=root group=root mode=0440 validate="/usr/sbin/visudo -cf %s"
  tags:
    - master

- name: Create local directory to work from
  file: path=/var/lib/ansible/local state=directory owner=root group=root mode=0751
  tags:
    - master

- name: Create ansible hosts directory to work from
  file: path=/etc/ansible/ state=directory owner=root group=root mode=0751
  tags:
    - master

- name: Copy ansible inventory file to client
  copy: src=hosts dest=/etc/ansible/hosts
          owner=root group=root mode=0644
  tags:
    - master

- name: Copy timesyncd.conf
  copy: src=timesyncd.conf dest=/etc/systemd/timesyncd.conf
  tags: ['custom','update']

- name: Enable systemd-timesyncd
  command: timedatectl set-ntp true
  tags: ['custom','update']

- name: Disable ntp service
  service: enabled=no name=ntp
  when: ansible_architecture == "armhf"
   or ansible_architecture == "armv7l"
  tags: ['custom', 'update']

- name: Remove the existing localtime file
  file: path=/etc/localtime state=absent
  tags: ['custom','rename']

- name: Set a new localtime file corresponding to the timezone
  file: src=/usr/share/zoneinfo/{{ timezone }} dest=/etc/localtime state=link force=yes
  tags: ['custom','rename']

- name: Set timezone variables
  copy: content={{ timezone }} dest=/etc/timezone owner=root group=root mode=0644 backup=yes
  notify: update timezone
  tags: ['custom','rename']

- name: Reconfigure openssh-server
  shell: rm -f /etc/ssh/*key* && dpkg-reconfigure openssh-server
  tags: ['rename']
  notify: Reboot device

- name: Checking if grub conf file is there
  stat: path=/etc/default/grub
  register: is_grub
  tags: ['master','custom']

- name: Shorten GRUB_TIMEOUT
  lineinfile:
    dest:       /etc/default/grub
    state:      present
    backup:     yes
    regexp:     '^GRUB_TIMEOUT=.*'
    line:       'GRUB_TIMEOUT=0'
  notify: Update grub
  when: is_grub.stat.exists is defined and is_grub.stat.exists
  tags: ['master','custom']
