---
- name: check we can use /dev/net/tun
  stat: path=/dev/net/tun
  register: tundevice
  tags: ['custom','update']

- name: Sorry, tinc requires /dev/net/tun. Aborting.
  fail: msg="no /dev/net/tun device found."
  when: tundevice.stat.exists == false
  tags: ['custom','update']

- name: install custom fact module for IP address
  template: >
    src=tinc_facts.sh.j2
    dest=/etc/ansible/facts.d/tinc_facts.fact
    mode=0755
  tags: ['custom','update','rename']

- name: reload ansible facts
  setup: filter=*
  tags: ['custom','update','rename']

- debug: msg="{{ ansible_local.tinc_facts.vpn_ip }}"
  tags: ['custom','update','rename']

- name: build a hostname for tinc, which doesn't like hyphens
  set_fact: tinc_localhost_name="{{ ansible_hostname | replace("-", "_") }}"
  tags: ['custom','update','rename']

- name: Verify if tinc key file exist 
  stat: path=/etc/tinc/{{ vpn_name }}/hosts/{{tinc_localhost_name}}
  register: tinc_key_file
  tags: ['custom','update','rename']

- name: Check if the RSA key is present in tinc key file
  shell: grep -F 'RSA' /etc/tinc/{{ vpn_name }}/hosts/{{tinc_localhost_name}} ; echo
  register: rsa_in_key_file
  when: tinc_key_file.stat.exists == True
  tags: ['custom','update','rename']

- name: Remove empty public key file
  file: path=/etc/tinc/{{ vpn_name }}/hosts/{{tinc_localhost_name}} state=absent
  when: rsa_in_key_file is defined and rsa_in_key_file.stdout == "" 
  tags: ['custom','update','rename']

- name: Remove private key file
  file: path=/etc/tinc/{{ vpn_name }}/rsa_key.priv state=absent
  when: rsa_in_key_file is defined and rsa_in_key_file.stdout == "" 
  tags: ['custom','update','rename']

- name: install rsync
  apt: >
    name=rsync
    state=present
    cache_valid_time=3600
  tags: ['custom','update']

- name: install tinc
  apt: >
    name=tinc
    state=present
    cache_valid_time=3600
  tags: ['custom','update']

# iptables module appears in ansible 2.0
- name: Open tinc ports in firewall
  shell: for port in 655 656 ; do for proto in tcp udp ; do for chain in INPUT OUTPUT ; do iptables -A $chain -m $proto -p $proto --dport $port -j ACCEPT ; done ; done ; done
  tags: ['custom','update']

- name: ensure tinc vpn name directory exists
  file: >
    path=/etc/tinc/{{ vpn_name }}/hosts
    recurse=True
    state=directory
  tags: ['custom','update','rename']

- name: ensure tinc.conf exists for vpn name
  template: >
    src=tinc.conf.j2
    dest=/etc/tinc/{{ vpn_name }}/tinc.conf
  notify: hello world
  tags: ['custom','update','rename']

- name: ensure tinc address is properly set in tinc host file
  lineinfile: >
    dest=/etc/tinc/{{ vpn_name }}/hosts/{{ tinc_localhost_name }}
    regexp='^Address'
    line="Address = {{ ansible_default_ipv4.address }}"
    create=yes
  notify:
    - reload tinc
    - hello world
  tags: ['custom','update','rename']

- name: ensure subnet ip address is properly set in tinc host file
  lineinfile: >
    dest=/etc/tinc/{{ vpn_name }}/hosts/{{ tinc_localhost_name }}
    regexp='^Subnet'
    line="Subnet = {{ ansible_local.tinc_facts.vpn_ip }}/32"
    create=yes
  notify:
    - reload tinc
    - hello world
  tags: ['custom','update','rename']

- name: add pubkeys for central nodes
  copy: src=hosts/{{ item }} dest=/etc/tinc/{{ vpn_name }}/hosts/{{ item }}
  with_items:
    - tincmaster
    - buildbot
  tags: ['custom','update']

- name: set default options for tinc
  template: >
    src=default.j2
    dest=/etc/default/tinc
  notify:
    - reload tinc
  tags: ['custom','update']

- name: create /etc/tinc/nets.boot file from template
  template: >
    src=nets.boot.j2
    dest=/etc/tinc/nets.boot
  notify:
    - restart tinc
  tags: ['custom','update']

- name: create tinc private key
  shell: tincd -n {{ vpn_name }} -K4096
  args:
    creates: /etc/tinc/{{ vpn_name }}/rsa_key.priv
  when: rsa_in_key_file is defined and rsa_in_key_file.stdout == "" 
    or tinc_key_file is undefined
  tags: ['custom','update','rename']
  
- name: create tinc-up file
  template: >
    src=tinc-up.j2
    dest=/etc/tinc/{{ vpn_name }}/tinc-up
    mode=0755
  notify:
    - reload tinc
    - hello world
  tags: ['custom','update','rename']

- name: create tinc-down file
  template: >
    src=tinc-down.j2
    dest=/etc/tinc/{{ vpn_name }}/tinc-down
    mode=0755
  notify:
    - reload tinc
  tags: ['custom','update','rename']

- name: Make sure tinc logs are rotated
  copy: src=tinc.logrotate dest=/etc/logrotate.d/tinc mode=0644
  tags: ['custom','update']

- name: Rename Key file name
  command: mv /etc/tinc/{{ vpn_name }}/hosts/{{ old_hostname }} /etc/tinc/{{ vpn_name }}/hosts/{{tinc_localhost_name}}
  tags: 
    - rename

- name: send the public key to central nodes
  shell: rsync -e "ssh -o StrictHostKeyChecking=no" /etc/tinc/{{ vpn_name }}/hosts/{{tinc_localhost_name }}  {{ central_server }}:/ansible/tinc-{{ vpn_name }}/
  tags: ['custom','update','rename']  
