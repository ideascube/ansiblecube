---
- include_vars: group_vars/{{ ansible_architecture }}.yml
  tags: ['master', 'custom']

- name: Configure the ideascube package repository
  template: src=ideascube.list.j2 dest=/etc/apt/sources.list.d/ideascube.list owner=root group=root mode=644
  tags: ['master', 'custom', 'update']

- name: Get ideascube installed (versions.stdout_lines.0) et candidate (versions.stdout_lines.1) version
  raw: LANG=C.UTF-8 apt-cache policy ideascube | awk ' $1~/Installed|Candidate|Install√©|Candidat/ { print $2 }'
  register: versions
  tags:
    - update

- set_fact:
    ideascube_installed="{{ versions.stdout_lines.0 }}"
    ideascube_candidate="{{ versions.stdout_lines.1 }}"
  tags:
    - update

#### Install last ideascube package

- name: Install ideascube
  apt: name=ideascube force=yes update_cache=yes dpkg_options="force-confnew" state=latest
  register: has_been_installed
  tags: ['master', 'custom']

- name: Include task needed when using an external hard drive
  include: ext_hdd.yml
  when: ext_hdd

- name: Run Ideascube migrations after the first installation
  become: yes
  become_user: ideascube
  command: ideascube migrate
  when: has_been_installed.changed == True
  tags: ['master', 'custom']

- block:
  - name: Backup data before upgrading
    shell: cp /var/ideascube/main/default.sqlite /var/ideascube/main/default.sqlite-{{ ideascube_installed }}-{{ ansible_date_time["date"] }}-{{ ansible_date_time["time"] }}

  - name: upgrade ideascube to the last version
    apt: name=ideascube force=yes update_cache=yes dpkg_options="force-confnew" state=latest
    register: is_upgraded
    notify: restart uwsgi

  when: ideascube_upgrade_frozen == False
  tags:
    - update

- name: Enable cards on homepage for ideascube upgrading from < 0.13.0
  become: yes
  become_user: ideascube
  command: ideascube reset_home
  when: ideascube_installed | version_compare('0.13.0', '<')
    and is_upgraded.changed == True
  tags:
    - update

# Add settings and conf
- name: Check if configuration file exist for Ideascube
  stat: path=/opt/venvs/ideascube/lib/python3.4/site-packages/ideascube/conf/{{ generic_project_name |replace("-", "_") }}.py
  register: conf_file
  tags: ['custom','rename','update']

- name: Set IDEASCUBE_ID variable
  set_fact: ideascube_id={{ generic_project_name |replace("-", "_") }}
  when: conf_file.stat.exists == True
  tags:
    - update

- name: Set IDEASCUBE_ID variable
  set_fact: ideascube_id={{ ideascube_project_name }}
  when: conf_file.stat.exists == True
  tags: ['custom','rename']

- name: Set IDEASCUBE_ID variable for koombook
  set_fact: ideascube_id=kb
  when: (ansible_architecture == 'armhf' or ansible_architecture == 'armv7l')
    and conf_file.stat.exists == False
  tags: ['custom','rename','update']

- name: Set IDEASCUBE_ID variable for ideasbox
  set_fact: ideascube_id=idb
  when: (ansible_architecture == 'x86_64' or ansible_architecture == 'i386') and conf_file.stat.exists == False
  tags: ['custom','rename','update']

- name: Change IDEASCUBE_ID
  lineinfile: dest=/etc/default/ideascube
              regexp='IDEASCUBE_ID='
              line='IDEASCUBE_ID={{ ideascube_id }}'
              state=present
  notify: restart uwsgi
  tags: ['custom','rename','update']

- name: Ensure that Ideascube folder belong the ideascube user
  command: chown -R {{ username }}:{{ username }} /var/ideascube/main/
  tags: 
    - update

- name: Ensure that Ideascube cache folder belong the ideascube user
  command: chown -R {{ username }}:{{ username }} /var/cache/ideascube/
  tags: 
    - update

- name: Set Ideascube name
  become: yes
  become_user: ideascube
  command: ideascube config set server site-name {{ hostname }}
  tags: ['master', 'custom']

- name: Get ideascube version
  shell: dpkg-query -W  ideascube  | awk '{print $2}' ; echo
  register: ideascube_newversion
  tags: ['master', 'custom', 'update']

- debug: msg="ideascube {{ ideascube_newversion.stdout }} is now the current version."
  tags: ['master', 'custom', 'update']

- name: Update catalog 
  become: yes
  become_user: ideascube
  command: ideascube catalog cache update
  when: ideascube_installed | version_compare('0.13.0', '>') 
    and ideascube_newversion.stdout | version_compare('0.15.0', '>=')
    and is_upgraded.changed == True
  tags:
    - update

- name: Enable the Ideascube Nginx site
  file: src=/etc/nginx/sites-available/ideascube dest=/etc/nginx/sites-enabled/ideascube state=link force=yes
  notify: restart nginx
  tags: ['master','update']

- name: Enable the Ideascube uWSGI app
  file: src=/etc/uwsgi/apps-available/ideascube.ini dest=/etc/uwsgi/apps-enabled/ideascube.ini state=link force=yes
  notify: restart uwsgi
  tags: ['master','update']

- name: Add router_cache to plugin uwsgi list
  lineinfile: dest=/etc/uwsgi/apps-available/ideascube.ini
              regexp='^plugins'
              line='plugins         = pam,python3,router_cache'
              state=present
  notify: restart uwsgi
  tags:
    - update

- name: Create and set up a cache for uwsgi
  blockinfile: block="{{ lookup('file', 'uwsgi-cache.ini') }}" dest="/etc/uwsgi/apps-available/ideascube.ini"
  notify: restart uwsgi
  tags:
    - update

- name: Copy ideascube_leftover_files.service systemd unit
  copy: src=ideascube_leftover_files.service dest=/etc/systemd/system/ideascube_leftover_files.service
  tags: ['master', 'custom', 'update']

- name: Copy ideascube_leftover_files.timer systemd unit
  copy: src=ideascube_leftover_files.timer dest=/etc/systemd/system/ideascube_leftover_files.timer
  tags: ['master', 'custom', 'update']

- name: Enable unit ideascube_leftover_files.timer
  service: name=ideascube_leftover_files.timer enabled=yes
  tags: ['master', 'custom', 'update']
